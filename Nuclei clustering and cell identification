library(Seurat)
library(ggplot2)
library(SeuratData)
library(EnhancedVolcano)
library(DESeq2)
library(BiocManager)
library(tidyr)
library(gridExtra)
library(tidyverse)
library(scCustomize)
library(Azimuth)
library(multtest)


Idents(total.mtx) <- total.mtx$cells

#Check for mitochondrial DNA contamination
total.mtx[['percent.mt']] <- PercentageFeatureSet(total.mtx, pattern = '^MT-')
View(total.mtx@meta.data)
FeatureScatter(total.mtx, feature1 = 'nCount_RNA', feature2 = 'nFeature_RNA')

#Normalize Data
total.mtx <- NormalizeData(total.mtx)

#Identify highly variable features
total.mtx <- FindVariableFeatures(total.mtx)

#Scale the data
total.genes <- rownames(total.mtx)
total.mtx <- ScaleData(total.mtx, features = total.genes)

#Linear dimensional reduction
total.mtx <- RunPCA(total.mtx, features = VariableFeatures(object = total.mtx))

#Determine dimensionality of the data
ElbowPlot(total.mtx)

#Cluster data
total.mtx <- FindNeighbors(total.mtx, dims = 1:18)

#Determine resolution
total.mtx <- FindClusters(total.mtx, resolution = c(0.1,0.2,0.3,0.4,0.5,0.6,0.7, 0.8, 0.9, 1)) #Test multiple at once, and then view each graph individually

#Run Azimuth 
total.mtx <- JoinLayers(total.mtx)
total.mtx <- RunAzimuth(total.mtx, reference = "heartref")

#visualize your data
total.mtx <- RunUMAP(total.mtx, dims = 1:18)
DimPlot(total.mtx, reduction = "umap", group.by = "orig.ident", raster=FALSE, label = FALSE) 

Idents(total.mtx) <- "orig.ident"
total.mtx <- RenameIdents(total.mtx,
                          "CPA.2.RV" = "PAB-SC144",
                          "CPA.3.RV" = "PAB-SC144",
                          "CPA.5.RV" = "PAB-SC144",
                          "CPA.17.RV" = "PAB-SC144",
                          "CPA.8.RV" = "PAB-VEH",
                          "CPA.9.RV" = "PAB-VEH", 
                          "CPA.10.RV" = "PAB-VEH", 
                          "CPA.11.RV" = "PAB-VEH", 
                          "CPA.12.RV" = "CONTROL", 
                          "CPA.13.RV" = "CONTROL", 
                          "CPA.14.RV" = "CONTROL", 
                          "CPA.15.RV" = "CONTROL")

total.mtx$condition <- Idents(total.mtx)
View(total.mtx@meta.data)
DimPlot(total.mtx, reduction = "umap", group.by = "condition", raster = FALSE)

#set resolution of your choice as seurat cluster numbers and identity as seurat clusters
total.mtx$seurat_clusters <- total.mtx$RNA_snn_res.0.55
Idents(total.mtx) <- total.mtx$seurat_clusters

#Find cluster cell markers, MAKE SURE IDENTS ARE SEURAT CLUSTER NUMBERS
markers.C0 <- FindConservedMarkers(total.mtx, ident.1 = 0, only.pos = TRUE, grouping.var = 'condition')
markers.C1 <- FindConservedMarkers(total.mtx, ident.1 = 1, only.pos = TRUE, grouping.var = 'condition')
markers.C2 <- FindConservedMarkers(total.mtx, ident.1 = 2, only.pos = TRUE, grouping.var = 'condition')
markers.C3 <- FindConservedMarkers(total.mtx, ident.1 = 3, only.pos = TRUE, grouping.var = 'condition')
markers.C4 <- FindConservedMarkers(total.mtx, ident.1 = 4, only.pos = TRUE, grouping.var = 'condition')
markers.C5 <- FindConservedMarkers(total.mtx, ident.1 = 5, only.pos = TRUE, grouping.var = 'condition')
markers.C6 <- FindConservedMarkers(total.mtx, ident.1 = 6, only.pos = TRUE, grouping.var = 'condition')
markers.C7 <- FindConservedMarkers(total.mtx, ident.1 = 7, only.pos = TRUE, grouping.var = 'condition')
markers.C8 <- FindConservedMarkers(total.mtx, ident.1 = 8, only.pos = TRUE, grouping.var = 'condition')
markers.C9 <- FindConservedMarkers(total.mtx, ident.1 = 9, only.pos = TRUE, grouping.var = 'condition')
markers.C10 <- FindConservedMarkers(total.mtx, ident.1 = 10, only.pos = TRUE, grouping.var = 'condition')
markers.C11 <- FindConservedMarkers(total.mtx, ident.1 = 11, only.pos = TRUE, grouping.var = 'condition')
markers.C12 <- FindConservedMarkers(total.mtx, ident.1 = 12, only.pos = TRUE, grouping.var = 'condition')
markers.C13 <- FindConservedMarkers(total.mtx, ident.1 = 13, only.pos = TRUE, grouping.var = 'condition')
markers.C14 <- FindConservedMarkers(total.mtx, ident.1 = 14, only.pos = TRUE, grouping.var = 'condition')
markers.C15 <- FindConservedMarkers(total.mtx, ident.1 = 15, only.pos = TRUE, grouping.var = 'condition')
markers.C16 <- FindConservedMarkers(total.mtx, ident.1 = 16, only.pos = TRUE, grouping.var = 'condition')
markers.C17 <- FindConservedMarkers(total.mtx, ident.1 = 17, only.pos = TRUE, grouping.var = 'condition')
markers.C18 <- FindConservedMarkers(total.mtx, ident.1 = 18, only.pos = TRUE, grouping.var = 'condition')
markers.C19 <- FindConservedMarkers(total.mtx, ident.1 = 19, only.pos = TRUE, grouping.var = 'condition')
markers.C20 <- FindConservedMarkers(total.mtx, ident.1 = 20, only.pos = TRUE, grouping.var = 'condition')
markers.C21 <- FindConservedMarkers(total.mtx, ident.1 = 21, only.pos = TRUE, grouping.var = 'condition')
markers.C22 <- FindConservedMarkers(total.mtx, ident.1 = 22, only.pos = TRUE, grouping.var = 'condition')
markers.C23 <- FindConservedMarkers(total.mtx, ident.1 = 23, only.pos = TRUE, grouping.var = 'condition')
markers.C24 <- FindConservedMarkers(total.mtx, ident.1 = 24, only.pos = TRUE, grouping.var = 'condition')
markers.C25 <- FindConservedMarkers(total.mtx, ident.1 = 25, only.pos = TRUE, grouping.var = 'condition')
markers.C26 <- FindConservedMarkers(total.mtx, ident.1 = 26, only.pos = TRUE, grouping.var = 'condition')

# Rename Cells with cell types
total.mtx <- RenameIdents(total.mtx, '0' = 'Cardiomyocyte 1')
total.mtx <- RenameIdents(total.mtx, '1' ='Fibroblast 1')
total.mtx <- RenameIdents(total.mtx, '2' = 'Cardiomyocyte 2')
total.mtx <- RenameIdents(total.mtx, '3' = 'Cardiomyocyte 3')
total.mtx <- RenameIdents(total.mtx, '4' = 'Cardiomyocyte 4')
total.mtx <- RenameIdents(total.mtx, '5' = 'Macrophage 1')
total.mtx <- RenameIdents(total.mtx, '6' = 'Pericyte 1')
total.mtx <- RenameIdents(total.mtx, '7' = 'Lymphocyte 1')
total.mtx <- RenameIdents(total.mtx, '8' = 'Cardiomyocyte 5')
total.mtx <- RenameIdents(total.mtx, '9' = 'Endothelial 1')
total.mtx <- RenameIdents(total.mtx, '10' = 'Cardiomyocyte 6')
total.mtx <- RenameIdents(total.mtx, '11' = 'Cardiomyocyte 7')
total.mtx <- RenameIdents(total.mtx, '12' = 'Neuronal')
total.mtx <- RenameIdents(total.mtx, '13' = 'Noise 1')
total.mtx <- RenameIdents(total.mtx, '14' = 'Macrophage 2')
total.mtx <- RenameIdents(total.mtx, '15' = 'Cardiomyocyte 8')
total.mtx <- RenameIdents(total.mtx, '16' = 'Fibroblast 2')
total.mtx <- RenameIdents(total.mtx, '17' = 'Macrophage 3')
total.mtx <- RenameIdents(total.mtx, '18' = 'Smooth Muscle')
total.mtx <- RenameIdents(total.mtx, '19' = 'Macrophage 4')
total.mtx <- RenameIdents(total.mtx, '20' = 'Pericyte 2')
total.mtx <- RenameIdents(total.mtx, '21' = 'Endothelial 2')
total.mtx <- RenameIdents(total.mtx, '22' = 'Noise 2')
total.mtx <- RenameIdents(total.mtx, '23' = 'Lymphocyte 2')
total.mtx <- RenameIdents(total.mtx, '24' = 'Fibroblast 3')
total.mtx <- RenameIdents(total.mtx, '25' = 'Macrophage 5')
total.mtx <- RenameIdents(total.mtx, '26' = 'Noise 3')

#Combining cell types clysters
total.mtx <- RenameIdents(total.mtx, 'Cardiomyocyte 1' = 'Cardiomyocytes')
total.mtx <- RenameIdents(total.mtx, 'Fibroblast 1' ='Fibroblasts')
total.mtx <- RenameIdents(total.mtx, 'Cardiomyocyte 2' = 'Cardiomyocytes')
total.mtx <- RenameIdents(total.mtx, 'Cardiomyocyte 3' = 'Cardiomyocytes')
total.mtx <- RenameIdents(total.mtx, 'Cardiomyocyte 4' = 'Cardiomyocytes')
total.mtx <- RenameIdents(total.mtx, 'Macrophage 1' = 'Macrophages')
total.mtx <- RenameIdents(total.mtx, 'Pericyte 1' = 'Pericytes')
total.mtx <- RenameIdents(total.mtx, 'Lymphocyte 1' = 'Lymphocytes')
total.mtx <- RenameIdents(total.mtx, 'Cardiomyocyte 5' = 'Cardiomyocytes')
total.mtx <- RenameIdents(total.mtx, 'Endothelial 1' = 'Endothelial Cells')
total.mtx <- RenameIdents(total.mtx, 'Cardiomyocyte 6' = 'Cardiomyocytes')
total.mtx <- RenameIdents(total.mtx, 'Cardiomyocyte 7' = 'Cardiomyocytes')
total.mtx <- RenameIdents(total.mtx, 'Neuronal' = 'Neuronal Cells')
total.mtx <- RenameIdents(total.mtx, 'Noise 1' = 'Noise')
total.mtx <- RenameIdents(total.mtx, 'Macrophage 2' = 'Macrophages')
total.mtx <- RenameIdents(total.mtx, 'Cardiomyocyte 8' = 'Cardiomyocytes')
total.mtx <- RenameIdents(total.mtx, 'Fibroblast 2' = 'Fibroblasts')
total.mtx <- RenameIdents(total.mtx, 'Macrophage 3' = 'Macrophages')
total.mtx <- RenameIdents(total.mtx, 'Smooth Muscle' = 'Smooth Muscle Cells')
total.mtx <- RenameIdents(total.mtx, 'Macrophage 4' = 'Macrophages')
total.mtx <- RenameIdents(total.mtx, 'Pericyte 2' = 'Pericytes')
total.mtx <- RenameIdents(total.mtx, 'Endothelial 2' = 'Endothelial Cells')
total.mtx <- RenameIdents(total.mtx, 'Noise 2' = 'Noise')
total.mtx <- RenameIdents(total.mtx, 'Lymphocyte 2' = 'Lymphocytes')
total.mtx <- RenameIdents(total.mtx, 'Fibroblast 3' = 'Fibroblasts')
total.mtx <- RenameIdents(total.mtx, 'Macrophage 5' = 'Macrophages')
total.mtx <- RenameIdents(total.mtx, 'Noise 3' = 'Noise')

total.mtx$cells <- Idents(total.mtx)
total.mtx <- subset(total.mtx, subset = cells != 'Noise')

#Cell numbers
table(Idents(total.mtx), total.mtx$orig.ident)
table(Idents(total.mtx), total.mtx$condition)

# Graphs

#UMAP
DimPlot(total.mtx, reduction = "umap", group.by = "cells", 
        cols = c('Lymphocytes' = 'chartreuse3','Macrophages' = 'lightskyblue', 'Neuronal Cells' = 'hotpink', 
                 'Endothelial Cells' = 'coral1', 'Pericytes' = 'darkseagreen', 'Smooth Muscle Cells' = 'deepskyblue2',
                 'Cardiomyocytes' = 'mediumpurple1', 'Fibroblasts' = 'darkgoldenrod3'), label = FALSE, raster = FALSE)

#UMAP of GP130 receptor expression
gp130_features_receptors <- c('IL6ST','IL6R','OSMR','LIFR','IL11RA','CNTFR')
FeaturePlot(total.mtx, features = gp130_features_receptors, cols = c('grey90', 'darkblue'), raster = FALSE)

#marker gene heatmap
features <- c('MRC1', 'FRMD4B', 'STAB1', #mac
              'DCN','MGP','RBMS3',       #fibro
              'PARP8','PTPRC','AOAH',    #lymph
              'PTPRB','EGFL7','PECAM1',  #endo
              'RGS5','GUCY1A2','EGFLAM', #peri
              'MYH11','ACTA2','PRKG1',   #smc
              'MLIP','ACTN2','MYO18B',   #CM
              'SCN7A','CDH19','CHL1')    #neuro

DoHeatmap(subset(total.mtx, downsample = 1000), features = features, 
          levels(c("Cardiomyocytes", 'Macrophages', 'Lymphocytes',
          'Fibroblasts', 'Pericytes', 'Endothelial Cells', 'Neuronal Cells', 'Smooth Muscle Cells')),
          group.colors =c('Lymphocytes' = 'chartreuse3','Macrophages' = 'lightskyblue', 'Neuronal Cells' = 'hotpink', 
                          'Endothelial Cells' = 'coral1', 'Pericytes' = 'darkseagreen', 'Smooth Muscle Cells' = 'deepskyblue2',
                          'Cardiomyocytes' = 'mediumpurple1', 'Fibroblasts' = 'darkgoldenrod3'), group.bar.height = 0.05)

#Relative abundance graphs

con.cells <- matrix(c(2.8, 6.2, 70.3, 2.4, 1.8, 3.9, 0.5, 12.0), ncol = 1, byrow = TRUE)
colnames(con.cells) = c("Percent")
rownames(con.cells) <- c('Lymphocytes', 'Macrophages', 'Cardiomyocytes', 'Endothelial Cells', 'Neuronal Cells', 'Pericytes', 'Smooth Muscle Cells', 'Fibroblasts')

#barplot
ggplot(con.cells, aes(fill = factor(rownames(con.cells), levels = c('Lymphocytes', 'Macrophages',
      'Cardiomyocytes', 'Endothelial Cells', 'Neuronal Cells', 'Pericytes', 'Smooth Muscle Cells',
      'Fibroblasts')), y=con.cells[,1], x="Percent")) + geom_bar(position = "stack", stat = "identity",
      color = 'black') + scale_fill_manual(values = c('chartreuse3','lightskyblue','mediumpurple1','coral1',
      'hotpink','darkseagreen','deepskyblue2','darkgoldenrod3')) + theme_classic() + ggtitle("CONTROL") + theme(axis.title.y = element_blank())

veh.cells <- matrix(c(8.2, 13.3, 51.2, 4.2, 2.4, 7.3, 0.4, 13.0), ncol = 1, byrow = TRUE)
colnames(veh.cells) = c("Percent")
rownames(veh.cells) <- c('Lymphocytes', 'Macrophages', 'Cardiomyocytes', 'Endothelial Cells', 'Neuronal Cells', 'Pericytes', 'Smooth Muscle Cells', 'Fibroblasts')

ggplot(veh.cells, aes(fill = factor(rownames(veh.cells), levels = c('Lymphocytes', 'Macrophages',
                  'Cardiomyocytes', 'Endothelial Cells', 'Neuronal Cells', 'Pericytes', 'Smooth Muscle Cells',
                  'Fibroblasts')), y=veh.cells[,1], x="Percent")) + geom_bar(position = "stack", stat = "identity",
                  color = 'black') + scale_fill_manual(values = c('chartreuse3','lightskyblue','mediumpurple1','coral1',
                  'hotpink','darkseagreen','deepskyblue2','darkgoldenrod3')) + theme_classic() + ggtitle("PAB-VEH") + theme(axis.title.y = element_blank())


sc144.cells <- matrix(c(5.0, 11.0, 59.3, 5.0, 0.9, 6.5, 0.5, 11.9), ncol = 1, byrow = TRUE)
colnames(sc144.cells) = c("Percent")
rownames(sc144.cells) <- c('Lymphocytes', 'Macrophages', 'Cardiomyocytes', 'Endothelial Cells', 'Neuronal Cells', 'Pericytes', 'Smooth Muscle Cells', 'Fibroblasts')

ggplot(sc144.cells, aes(fill = factor(rownames(sc144.cells), levels = c('Lymphocytes', 'Macrophages',
                    'Cardiomyocytes', 'Endothelial Cells', 'Neuronal Cells', 'Pericytes', 'Smooth Muscle Cells',
                    'Fibroblasts')), y=sc144.cells[,1], x="Percent")) + geom_bar(position = "stack", stat = "identity",
                    color = 'black') + scale_fill_manual(values = c('chartreuse3','lightskyblue','mediumpurple1','coral1',
                    'hotpink','darkseagreen','deepskyblue2','darkgoldenrod3')) + theme_classic() + ggtitle("PAB-SC144") + theme(axis.title.y = element_blank())






























